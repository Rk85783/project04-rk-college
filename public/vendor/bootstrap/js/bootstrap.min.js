/*!
  * Bootstrap v4.5.2 (https://getbootstrap.com/)
  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
!(function (t, e) { typeof exports === "object" && typeof module !== "undefined" ? e(exports, require("jquery"), require("popper.js")) : typeof define === "function" && define.amd ? define(["exports", "jquery", "popper.js"], e) : e((t = typeof globalThis !== "undefined" ? globalThis : t || self).bootstrap = {}, t.jQuery, t.Popper); }(this, function (t, e, n) { "use strict"; function i (t, e) { for (let n = 0; n < e.length; n++) { const i = e[n]; i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i); } } function o (t, e, n) { return e && i(t.prototype, e), n && i(t, n), t; } function s () { return (s = Object.assign || function (t) { for (let e = 1; e < arguments.length; e++) { const n = arguments[e]; for (const i in n)Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]); } return t; }).apply(this, arguments); }e = e && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e, n = n && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n; function r (t) { const n = this; let i = !1; return e(this).one(a.TRANSITION_END, function () { i = !0; }), setTimeout(function () { i || a.triggerTransitionEnd(n); }, t), this; } var a = { TRANSITION_END: "bsTransitionEnd", getUID: function (t) { do { t += ~~(1e6 * Math.random()); } while (document.getElementById(t)); return t; }, getSelectorFromElement: function (t) { let e = t.getAttribute("data-target"); if (!e || e === "#") { const n = t.getAttribute("href"); e = n && n !== "#" ? n.trim() : ""; } try { return document.querySelector(e) ? e : null; } catch (t) { return null; } }, getTransitionDurationFromElement: function (t) { if (!t) return 0; let n = e(t).css("transition-duration"); let i = e(t).css("transition-delay"); const o = parseFloat(n); const s = parseFloat(i); return o || s ? (n = n.split(",")[0], i = i.split(",")[0], 1e3 * (parseFloat(n) + parseFloat(i))) : 0; }, reflow: function (t) { return t.offsetHeight; }, triggerTransitionEnd: function (t) { e(t).trigger("transitionend"); }, supportsTransitionEnd: function () { return Boolean("transitionend"); }, isElement: function (t) { return (t[0] || t).nodeType; }, typeCheckConfig: function (t, e, n) { for (const i in n) if (Object.prototype.hasOwnProperty.call(n, i)) { const o = n[i]; const s = e[i]; const r = s && a.isElement(s) ? "element" : (l = s) === null || typeof l === "undefined" ? "" + l : {}.toString.call(l).match(/\s([a-z]+)/i)[1].toLowerCase(); if (!new RegExp(o).test(r)) throw new Error(t.toUpperCase() + ": Option \"" + i + "\" provided type \"" + r + "\" but expected type \"" + o + "\"."); } let l; }, findShadowRoot: function (t) { if (!document.documentElement.attachShadow) return null; if (typeof t.getRootNode === "function") { const e = t.getRootNode(); return e instanceof ShadowRoot ? e : null; } return t instanceof ShadowRoot ? t : t.parentNode ? a.findShadowRoot(t.parentNode) : null; }, jQueryDetection: function () { if (typeof e === "undefined") throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript."); const t = e.fn.jquery.split(" ")[0].split("."); if (t[0] < 2 && t[1] < 9 || t[0] === 1 && t[1] === 9 && t[2] < 1 || t[0] >= 4) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0"); } }; a.jQueryDetection(), e.fn.emulateTransitionEnd = r, e.event.special[a.TRANSITION_END] = { bindType: "transitionend", delegateType: "transitionend", handle: function (t) { if (e(t.target).is(this)) return t.handleObj.handler.apply(this, arguments); } }; const l = "alert"; const c = e.fn[l]; const h = (function () { function t (t) { this._element = t; } const n = t.prototype; return n.close = function (t) { let e = this._element; t && (e = this._getRootElement(t)), this._triggerCloseEvent(e).isDefaultPrevented() || this._removeElement(e); }, n.dispose = function () { e.removeData(this._element, "bs.alert"), this._element = null; }, n._getRootElement = function (t) { const n = a.getSelectorFromElement(t); let i = !1; return n && (i = document.querySelector(n)), i || (i = e(t).closest(".alert")[0]), i; }, n._triggerCloseEvent = function (t) { const n = e.Event("close.bs.alert"); return e(t).trigger(n), n; }, n._removeElement = function (t) { const n = this; if (e(t).removeClass("show"), e(t).hasClass("fade")) { const i = a.getTransitionDurationFromElement(t); e(t).one(a.TRANSITION_END, function (e) { return n._destroyElement(t, e); }).emulateTransitionEnd(i); } else this._destroyElement(t); }, n._destroyElement = function (t) { e(t).detach().trigger("closed.bs.alert").remove(); }, t._jQueryInterface = function (n) { return this.each(function () { const i = e(this); let o = i.data("bs.alert"); o || (o = new t(this), i.data("bs.alert", o)), n === "close" && o[n](this); }); }, t._handleDismiss = function (t) { return function (e) { e && e.preventDefault(), t.close(this); }; }, o(t, null, [{ key: "VERSION", get: function () { return "4.5.2"; } }]), t; }()); e(document).on("click.bs.alert.data-api", "[data-dismiss=\"alert\"]", h._handleDismiss(new h())), e.fn[l] = h._jQueryInterface, e.fn[l].Constructor = h, e.fn[l].noConflict = function () { return e.fn[l] = c, h._jQueryInterface; }; const u = e.fn.button; const d = (function () { function t (t) { this._element = t; } const n = t.prototype; return n.toggle = function () { let t = !0; let n = !0; const i = e(this._element).closest("[data-toggle=\"buttons\"]")[0]; if (i) { const o = this._element.querySelector("input:not([type=\"hidden\"])"); if (o) { if (o.type === "radio") if (o.checked && this._element.classList.contains("active"))t = !1; else { const s = i.querySelector(".active"); s && e(s).removeClass("active"); }t && (o.type !== "checkbox" && o.type !== "radio" || (o.checked = !this._element.classList.contains("active")), e(o).trigger("change")), o.focus(), n = !1; } } this._element.hasAttribute("disabled") || this._element.classList.contains("disabled") || (n && this._element.setAttribute("aria-pressed", !this._element.classList.contains("active")), t && e(this._element).toggleClass("active")); }, n.dispose = function () { e.removeData(this._element, "bs.button"), this._element = null; }, t._jQueryInterface = function (n) { return this.each(function () { let i = e(this).data("bs.button"); i || (i = new t(this), e(this).data("bs.button", i)), n === "toggle" && i[n](); }); }, o(t, null, [{ key: "VERSION", get: function () { return "4.5.2"; } }]), t; }()); e(document).on("click.bs.button.data-api", "[data-toggle^=\"button\"]", function (t) { let n = t.target; const i = n; if (e(n).hasClass("btn") || (n = e(n).closest(".btn")[0]), !n || n.hasAttribute("disabled") || n.classList.contains("disabled"))t.preventDefault(); else { const o = n.querySelector("input:not([type=\"hidden\"])"); if (o && (o.hasAttribute("disabled") || o.classList.contains("disabled"))) return void t.preventDefault(); (i.tagName !== "LABEL" || o && o.type !== "checkbox") && d._jQueryInterface.call(e(n), "toggle"); } }).on("focus.bs.button.data-api blur.bs.button.data-api", "[data-toggle^=\"button\"]", function (t) { const n = e(t.target).closest(".btn")[0]; e(n).toggleClass("focus", /^focus(in)?$/.test(t.type)); }), e(window).on("load.bs.button.data-api", function () { for (var t = [].slice.call(document.querySelectorAll("[data-toggle=\"buttons\"] .btn")), e = 0, n = t.length; e < n; e++) { const i = t[e]; const o = i.querySelector("input:not([type=\"hidden\"])"); o.checked || o.hasAttribute("checked") ? i.classList.add("active") : i.classList.remove("active"); } for (let s = 0, r = (t = [].slice.call(document.querySelectorAll("[data-toggle=\"button\"]"))).length; s < r; s++) { const a = t[s]; a.getAttribute("aria-pressed") === "true" ? a.classList.add("active") : a.classList.remove("active"); } }), e.fn.button = d._jQueryInterface, e.fn.button.Constructor = d, e.fn.button.noConflict = function () { return e.fn.button = u, d._jQueryInterface; }; const f = "carousel"; const g = ".bs.carousel"; const m = e.fn[f]; const p = { interval: 5e3, keyboard: !0, slide: !1, pause: "hover", wrap: !0, touch: !0 }; const _ = { interval: "(number|boolean)", keyboard: "boolean", slide: "(boolean|string)", pause: "(string|boolean)", wrap: "boolean", touch: "boolean" }; const v = { TOUCH: "touch", PEN: "pen" }; const b = (function () { function t (t, e) { this._items = null, this._interval = null, this._activeElement = null, this._isPaused = !1, this._isSliding = !1, this.touchTimeout = null, this.touchStartX = 0, this.touchDeltaX = 0, this._config = this._getConfig(e), this._element = t, this._indicatorsElement = this._element.querySelector(".carousel-indicators"), this._touchSupported = "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0, this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent), this._addEventListeners(); } const n = t.prototype; return n.next = function () { this._isSliding || this._slide("next"); }, n.nextWhenVisible = function () { !document.hidden && e(this._element).is(":visible") && e(this._element).css("visibility") !== "hidden" && this.next(); }, n.prev = function () { this._isSliding || this._slide("prev"); }, n.pause = function (t) { t || (this._isPaused = !0), this._element.querySelector(".carousel-item-next, .carousel-item-prev") && (a.triggerTransitionEnd(this._element), this.cycle(!0)), clearInterval(this._interval), this._interval = null; }, n.cycle = function (t) { t || (this._isPaused = !1), this._interval && (clearInterval(this._interval), this._interval = null), this._config.interval && !this._isPaused && (this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval)); }, n.to = function (t) { const n = this; this._activeElement = this._element.querySelector(".active.carousel-item"); const i = this._getItemIndex(this._activeElement); if (!(t > this._items.length - 1 || t < 0)) if (this._isSliding)e(this._element).one("slid.bs.carousel", function () { return n.to(t); }); else { if (i === t) return this.pause(), void this.cycle(); const o = t > i ? "next" : "prev"; this._slide(o, this._items[t]); } }, n.dispose = function () { e(this._element).off(g), e.removeData(this._element, "bs.carousel"), this._items = null, this._config = null, this._element = null, this._interval = null, this._isPaused = null, this._isSliding = null, this._activeElement = null, this._indicatorsElement = null; }, n._getConfig = function (t) { return t = s({}, p, t), a.typeCheckConfig(f, t, _), t; }, n._handleSwipe = function () { const t = Math.abs(this.touchDeltaX); if (!(t <= 40)) { const e = t / this.touchDeltaX; this.touchDeltaX = 0, e > 0 && this.prev(), e < 0 && this.next(); } }, n._addEventListeners = function () { const t = this; this._config.keyboard && e(this._element).on("keydown.bs.carousel", function (e) { return t._keydown(e); }), this._config.pause === "hover" && e(this._element).on("mouseenter.bs.carousel", function (e) { return t.pause(e); }).on("mouseleave.bs.carousel", function (e) { return t.cycle(e); }), this._config.touch && this._addTouchEventListeners(); }, n._addTouchEventListeners = function () { const t = this; if (this._touchSupported) { const n = function (e) { t._pointerEvent && v[e.originalEvent.pointerType.toUpperCase()] ? t.touchStartX = e.originalEvent.clientX : t._pointerEvent || (t.touchStartX = e.originalEvent.touches[0].clientX); }; const i = function (e) { t._pointerEvent && v[e.originalEvent.pointerType.toUpperCase()] && (t.touchDeltaX = e.originalEvent.clientX - t.touchStartX), t._handleSwipe(), t._config.pause === "hover" && (t.pause(), t.touchTimeout && clearTimeout(t.touchTimeout), t.touchTimeout = setTimeout(function (e) { return t.cycle(e); }, 500 + t._config.interval)); }; e(this._element.querySelectorAll(".carousel-item img")).on("dragstart.bs.carousel", function (t) { return t.preventDefault(); }), this._pointerEvent ? (e(this._element).on("pointerdown.bs.carousel", function (t) { return n(t); }), e(this._element).on("pointerup.bs.carousel", function (t) { return i(t); }), this._element.classList.add("pointer-event")) : (e(this._element).on("touchstart.bs.carousel", function (t) { return n(t); }), e(this._element).on("touchmove.bs.carousel", function (e) { return (function (e) { e.originalEvent.touches && e.originalEvent.touches.length > 1 ? t.touchDeltaX = 0 : t.touchDeltaX = e.originalEvent.touches[0].clientX - t.touchStartX; }(e)); }), e(this._element).on("touchend.bs.carousel", function (t) { return i(t); })); } }, n._keydown = function (t) { if (!/input|textarea/i.test(t.target.tagName)) switch (t.which) { case 37:t.preventDefault(), this.prev(); break; case 39:t.preventDefault(), this.next(); } }, n._getItemIndex = function (t) { return this._items = t && t.parentNode ? [].slice.call(t.parentNode.querySelectorAll(".carousel-item")) : [], this._items.indexOf(t); }, n._getItemByDirection = function (t, e) { const n = t === "next"; const i = t === "prev"; const o = this._getItemIndex(e); const s = this._items.length - 1; if ((i && o === 0 || n && o === s) && !this._config.wrap) return e; const r = (o + (t === "prev" ? -1 : 1)) % this._items.length; return r === -1 ? this._items[this._items.length - 1] : this._items[r]; }, n._triggerSlideEvent = function (t, n) { const i = this._getItemIndex(t); const o = this._getItemIndex(this._element.querySelector(".active.carousel-item")); const s = e.Event("slide.bs.carousel", { relatedTarget: t, direction: n, from: o, to: i }); return e(this._element).trigger(s), s; }, n._setActiveIndicatorElement = function (t) { if (this._indicatorsElement) { const n = [].slice.call(this._indicatorsElement.querySelectorAll(".active")); e(n).removeClass("active"); const i = this._indicatorsElement.children[this._getItemIndex(t)]; i && e(i).addClass("active"); } }, n._slide = function (t, n) { let i; let o; let s; const r = this; const l = this._element.querySelector(".active.carousel-item"); const c = this._getItemIndex(l); const h = n || l && this._getItemByDirection(t, l); const u = this._getItemIndex(h); const d = Boolean(this._interval); if (t === "next" ? (i = "carousel-item-left", o = "carousel-item-next", s = "left") : (i = "carousel-item-right", o = "carousel-item-prev", s = "right"), h && e(h).hasClass("active")) this._isSliding = !1; else if (!this._triggerSlideEvent(h, s).isDefaultPrevented() && l && h) { this._isSliding = !0, d && this.pause(), this._setActiveIndicatorElement(h); const f = e.Event("slid.bs.carousel", { relatedTarget: h, direction: s, from: c, to: u }); if (e(this._element).hasClass("slide")) { e(h).addClass(o), a.reflow(h), e(l).addClass(i), e(h).addClass(i); const g = parseInt(h.getAttribute("data-interval"), 10); g ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, this._config.interval = g) : this._config.interval = this._config.defaultInterval || this._config.interval; const m = a.getTransitionDurationFromElement(l); e(l).one(a.TRANSITION_END, function () { e(h).removeClass(i + " " + o).addClass("active"), e(l).removeClass("active " + o + " " + i), r._isSliding = !1, setTimeout(function () { return e(r._element).trigger(f); }, 0); }).emulateTransitionEnd(m); } else e(l).removeClass("active"), e(h).addClass("active"), this._isSliding = !1, e(this._element).trigger(f); d && this.cycle(); } }, t._jQueryInterface = function (n) { return this.each(function () { let i = e(this).data("bs.carousel"); let o = s({}, p, e(this).data()); typeof n === "object" && (o = s({}, o, n)); const r = typeof n === "string" ? n : o.slide; if (i || (i = new t(this, o), e(this).data("bs.carousel", i)), typeof n === "number")i.to(n); else if (typeof r === "string") { if (typeof i[r] === "undefined") throw new TypeError("No method named \"" + r + "\""); i[r](); } else o.interval && o.ride && (i.pause(), i.cycle()); }); }, t._dataApiClickHandler = function (n) { const i = a.getSelectorFromElement(this); if (i) { const o = e(i)[0]; if (o && e(o).hasClass("carousel")) { const r = s({}, e(o).data(), e(this).data()); const l = this.getAttribute("data-slide-to"); l && (r.interval = !1), t._jQueryInterface.call(e(o), r), l && e(o).data("bs.carousel").to(l), n.preventDefault(); } } }, o(t, null, [{ key: "VERSION", get: function () { return "4.5.2"; } }, { key: "Default", get: function () { return p; } }]), t; }()); e(document).on("click.bs.carousel.data-api", "[data-slide], [data-slide-to]", b._dataApiClickHandler), e(window).on("load.bs.carousel.data-api", function () { for (let t = [].slice.call(document.querySelectorAll("[data-ride=\"carousel\"]")), n = 0, i = t.length; n < i; n++) { const o = e(t[n]); b._jQueryInterface.call(o, o.data()); } }), e.fn[f] = b._jQueryInterface, e.fn[f].Constructor = b, e.fn[f].noConflict = function () { return e.fn[f] = m, b._jQueryInterface; }; const y = "collapse"; const E = e.fn[y]; const w = { toggle: !0, parent: "" }; const T = { toggle: "boolean", parent: "(string|element)" }; const C = (function () { function t (t, e) { this._isTransitioning = !1, this._element = t, this._config = this._getConfig(e), this._triggerArray = [].slice.call(document.querySelectorAll("[data-toggle=\"collapse\"][href=\"#" + t.id + "\"],[data-toggle=\"collapse\"][data-target=\"#" + t.id + "\"]")); for (let n = [].slice.call(document.querySelectorAll("[data-toggle=\"collapse\"]")), i = 0, o = n.length; i < o; i++) { const s = n[i]; const r = a.getSelectorFromElement(s); const l = [].slice.call(document.querySelectorAll(r)).filter(function (e) { return e === t; }); r !== null && l.length > 0 && (this._selector = r, this._triggerArray.push(s)); } this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle(); } const n = t.prototype; return n.toggle = function () { e(this._element).hasClass("show") ? this.hide() : this.show(); }, n.show = function () { let n; let i; const o = this; if (!this._isTransitioning && !e(this._element).hasClass("show") && (this._parent && (n = [].slice.call(this._parent.querySelectorAll(".show, .collapsing")).filter(function (t) { return typeof o._config.parent === "string" ? t.getAttribute("data-parent") === o._config.parent : t.classList.contains("collapse"); })).length === 0 && (n = null), !(n && (i = e(n).not(this._selector).data("bs.collapse")) && i._isTransitioning))) { const s = e.Event("show.bs.collapse"); if (e(this._element).trigger(s), !s.isDefaultPrevented()) { n && (t._jQueryInterface.call(e(n).not(this._selector), "hide"), i || e(n).data("bs.collapse", null)); const r = this._getDimension(); e(this._element).removeClass("collapse").addClass("collapsing"), this._element.style[r] = 0, this._triggerArray.length && e(this._triggerArray).removeClass("collapsed").attr("aria-expanded", !0), this.setTransitioning(!0); const l = "scroll" + (r[0].toUpperCase() + r.slice(1)); const c = a.getTransitionDurationFromElement(this._element); e(this._element).one(a.TRANSITION_END, function () { e(o._element).removeClass("collapsing").addClass("collapse show"), o._element.style[r] = "", o.setTransitioning(!1), e(o._element).trigger("shown.bs.collapse"); }).emulateTransitionEnd(c), this._element.style[r] = this._element[l] + "px"; } } }, n.hide = function () { const t = this; if (!this._isTransitioning && e(this._element).hasClass("show")) { const n = e.Event("hide.bs.collapse"); if (e(this._element).trigger(n), !n.isDefaultPrevented()) { const i = this._getDimension(); this._element.style[i] = this._element.getBoundingClientRect()[i] + "px", a.reflow(this._element), e(this._element).addClass("collapsing").removeClass("collapse show"); const o = this._triggerArray.length; if (o > 0) for (let s = 0; s < o; s++) { const r = this._triggerArray[s]; const l = a.getSelectorFromElement(r); if (l !== null)e([].slice.call(document.querySelectorAll(l))).hasClass("show") || e(r).addClass("collapsed").attr("aria-expanded", !1); } this.setTransitioning(!0); this._element.style[i] = ""; const c = a.getTransitionDurationFromElement(this._element); e(this._element).one(a.TRANSITION_END, function () { t.setTransitioning(!1), e(t._element).removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse"); }).emulateTransitionEnd(c); } } }, n.setTransitioning = function (t) { this._isTransitioning = t; }, n.dispose = function () { e.removeData(this._element, "bs.collapse"), this._config = null, this._parent = null, this._element = null, this._triggerArray = null, this._isTransitioning = null; }, n._getConfig = function (t) { return (t = s({}, w, t)).toggle = Boolean(t.toggle), a.typeCheckConfig(y, t, T), t; }, n._getDimension = function () { return e(this._element).hasClass("width") ? "width" : "height"; }, n._getParent = function () { let n; const i = this; a.isElement(this._config.parent) ? (n = this._config.parent, typeof this._config.parent.jquery !== "undefined" && (n = this._config.parent[0])) : n = document.querySelector(this._config.parent); const o = "[data-toggle=\"collapse\"][data-parent=\"" + this._config.parent + "\"]"; const s = [].slice.call(n.querySelectorAll(o)); return e(s).each(function (e, n) { i._addAriaAndCollapsedClass(t._getTargetFromElement(n), [n]); }), n; }, n._addAriaAndCollapsedClass = function (t, n) { const i = e(t).hasClass("show"); n.length && e(n).toggleClass("collapsed", !i).attr("aria-expanded", i); }, t._getTargetFromElement = function (t) { const e = a.getSelectorFromElement(t); return e ? document.querySelector(e) : null; }, t._jQueryInterface = function (n) { return this.each(function () { const i = e(this); let o = i.data("bs.collapse"); const r = s({}, w, i.data(), typeof n === "object" && n ? n : {}); if (!o && r.toggle && typeof n === "string" && /show|hide/.test(n) && (r.toggle = !1), o || (o = new t(this, r), i.data("bs.collapse", o)), typeof n === "string") { if (typeof o[n] === "undefined") throw new TypeError("No method named \"" + n + "\""); o[n](); } }); }, o(t, null, [{ key: "VERSION", get: function () { return "4.5.2"; } }, { key: "Default", get: function () { return w; } }]), t; }()); e(document).on("click.bs.collapse.data-api", "[data-toggle=\"collapse\"]", function (t) { t.currentTarget.tagName === "A" && t.preventDefault(); const n = e(this); const i = a.getSelectorFromElement(this); const o = [].slice.call(document.querySelectorAll(i)); e(o).each(function () { const t = e(this); const i = t.data("bs.collapse") ? "toggle" : n.data(); C._jQueryInterface.call(t, i); }); }), e.fn[y] = C._jQueryInterface, e.fn[y].Constructor = C, e.fn[y].noConflict = function () { return e.fn[y] = E, C._jQueryInterface; }; const S = "dropdown"; const k = e.fn[S]; const D = new RegExp("38|40|27"); const N = { offset: 0, flip: !0, boundary: "scrollParent", reference: "toggle", display: "dynamic", popperConfig: null }; const A = { offset: "(number|string|function)", flip: "boolean", boundary: "(string|element)", reference: "(string|element)", display: "string", popperConfig: "(null|object)" }; const I = (function () { function t (t, e) { this._element = t, this._popper = null, this._config = this._getConfig(e), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar(), this._addEventListeners(); } const i = t.prototype; return i.toggle = function () { if (!this._element.disabled && !e(this._element).hasClass("disabled")) { const n = e(this._menu).hasClass("show"); t._clearMenus(), n || this.show(!0); } }, i.show = function (i) { if (void 0 === i && (i = !1), !(this._element.disabled || e(this._element).hasClass("disabled") || e(this._menu).hasClass("show"))) { const o = { relatedTarget: this._element }; const s = e.Event("show.bs.dropdown", o); const r = t._getParentFromElement(this._element); if (e(r).trigger(s), !s.isDefaultPrevented()) { if (!this._inNavbar && i) { if (typeof n === "undefined") throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)"); let l = this._element; this._config.reference === "parent" ? l = r : a.isElement(this._config.reference) && (l = this._config.reference, typeof this._config.reference.jquery !== "undefined" && (l = this._config.reference[0])), this._config.boundary !== "scrollParent" && e(r).addClass("position-static"), this._popper = new n(l, this._menu, this._getPopperConfig()); }"ontouchstart" in document.documentElement && e(r).closest(".navbar-nav").length === 0 && e(document.body).children().on("mouseover", null, e.noop), this._element.focus(), this._element.setAttribute("aria-expanded", !0), e(this._menu).toggleClass("show"), e(r).toggleClass("show").trigger(e.Event("shown.bs.dropdown", o)); } } }, i.hide = function () { if (!this._element.disabled && !e(this._element).hasClass("disabled") && e(this._menu).hasClass("show")) { const n = { relatedTarget: this._element }; const i = e.Event("hide.bs.dropdown", n); const o = t._getParentFromElement(this._element); e(o).trigger(i), i.isDefaultPrevented() || (this._popper && this._popper.destroy(), e(this._menu).toggleClass("show"), e(o).toggleClass("show").trigger(e.Event("hidden.bs.dropdown", n))); } }, i.dispose = function () { e.removeData(this._element, "bs.dropdown"), e(this._element).off(".bs.dropdown"), this._element = null, this._menu = null, this._popper !== null && (this._popper.destroy(), this._popper = null); }, i.update = function () { this._inNavbar = this._detectNavbar(), this._popper !== null && this._popper.scheduleUpdate(); }, i._addEventListeners = function () { const t = this; e(this._element).on("click.bs.dropdown", function (e) { e.preventDefault(), e.stopPropagation(), t.toggle(); }); }, i._getConfig = function (t) { return t = s({}, this.constructor.Default, e(this._element).data(), t), a.typeCheckConfig(S, t, this.constructor.DefaultType), t; }, i._getMenuElement = function () { if (!this._menu) { const e = t._getParentFromElement(this._element); e && (this._menu = e.querySelector(".dropdown-menu")); } return this._menu; }, i._getPlacement = function () { const t = e(this._element.parentNode); let n = "bottom-start"; return t.hasClass("dropup") ? n = e(this._menu).hasClass("dropdown-menu-right") ? "top-end" : "top-start" : t.hasClass("dropright") ? n = "right-start" : t.hasClass("dropleft") ? n = "left-start" : e(this._menu).hasClass("dropdown-menu-right") && (n = "bottom-end"), n; }, i._detectNavbar = function () { return e(this._element).closest(".navbar").length > 0; }, i._getOffset = function () { const t = this; const e = {}; return typeof this._config.offset === "function" ? e.fn = function (e) { return e.offsets = s({}, e.offsets, t._config.offset(e.offsets, t._element) || {}), e; } : e.offset = this._config.offset, e; }, i._getPopperConfig = function () { const t = { placement: this._getPlacement(), modifiers: { offset: this._getOffset(), flip: { enabled: this._config.flip }, preventOverflow: { boundariesElement: this._config.boundary } } }; return this._config.display === "static" && (t.modifiers.applyStyle = { enabled: !1 }), s({}, t, this._config.popperConfig); }, t._jQueryInterface = function (n) { return this.each(function () { let i = e(this).data("bs.dropdown"); if (i || (i = new t(this, typeof n === "object" ? n : null), e(this).data("bs.dropdown", i)), typeof n === "string") { if (typeof i[n] === "undefined") throw new TypeError("No method named \"" + n + "\""); i[n](); } }); }, t._clearMenus = function (n) { if (!n || n.which !== 3 && (n.type !== "keyup" || n.which === 9)) for (let i = [].slice.call(document.querySelectorAll("[data-toggle=\"dropdown\"]")), o = 0, s = i.length; o < s; o++) { const r = t._getParentFromElement(i[o]); const a = e(i[o]).data("bs.dropdown"); const l = { relatedTarget: i[o] }; if (n && n.type === "click" && (l.clickEvent = n), a) { const c = a._menu; if (e(r).hasClass("show") && !(n && (n.type === "click" && /input|textarea/i.test(n.target.tagName) || n.type === "keyup" && n.which === 9) && e.contains(r, n.target))) { const h = e.Event("hide.bs.dropdown", l); e(r).trigger(h), h.isDefaultPrevented() || ("ontouchstart" in document.documentElement && e(document.body).children().off("mouseover", null, e.noop), i[o].setAttribute("aria-expanded", "false"), a._popper && a._popper.destroy(), e(c).removeClass("show"), e(r).removeClass("show").trigger(e.Event("hidden.bs.dropdown", l))); } } } }, t._getParentFromElement = function (t) { let e; const n = a.getSelectorFromElement(t); return n && (e = document.querySelector(n)), e || t.parentNode; }, t._dataApiKeydownHandler = function (n) { if (!(/input|textarea/i.test(n.target.tagName) ? n.which === 32 || n.which !== 27 && (n.which !== 40 && n.which !== 38 || e(n.target).closest(".dropdown-menu").length) : !D.test(n.which)) && !this.disabled && !e(this).hasClass("disabled")) { const i = t._getParentFromElement(this); const o = e(i).hasClass("show"); if (o || n.which !== 27) { if (n.preventDefault(), n.stopPropagation(), !o || o && (n.which === 27 || n.which === 32)) return n.which === 27 && e(i.querySelector("[data-toggle=\"dropdown\"]")).trigger("focus"), void e(this).trigger("click"); const s = [].slice.call(i.querySelectorAll(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)")).filter(function (t) { return e(t).is(":visible"); }); if (s.length !== 0) { let r = s.indexOf(n.target); n.which === 38 && r > 0 && r--, n.which === 40 && r < s.length - 1 && r++, r < 0 && (r = 0), s[r].focus(); } } } }, o(t, null, [{ key: "VERSION", get: function () { return "4.5.2"; } }, { key: "Default", get: function () { return N; } }, { key: "DefaultType", get: function () { return A; } }]), t; }()); e(document).on("keydown.bs.dropdown.data-api", "[data-toggle=\"dropdown\"]", I._dataApiKeydownHandler).on("keydown.bs.dropdown.data-api", ".dropdown-menu", I._dataApiKeydownHandler).on("click.bs.dropdown.data-api keyup.bs.dropdown.data-api", I._clearMenus).on("click.bs.dropdown.data-api", "[data-toggle=\"dropdown\"]", function (t) { t.preventDefault(), t.stopPropagation(), I._jQueryInterface.call(e(this), "toggle"); }).on("click.bs.dropdown.data-api", ".dropdown form", function (t) { t.stopPropagation(); }), e.fn[S] = I._jQueryInterface, e.fn[S].Constructor = I, e.fn[S].noConflict = function () { return e.fn[S] = k, I._jQueryInterface; }; const O = e.fn.modal; const j = { backdrop: !0, keyboard: !0, focus: !0, show: !0 }; const x = { backdrop: "(boolean|string)", keyboard: "boolean", focus: "boolean", show: "boolean" }; const P = (function () { function t (t, e) { this._config = this._getConfig(e), this._element = t, this._dialog = t.querySelector(".modal-dialog"), this._backdrop = null, this._isShown = !1, this._isBodyOverflowing = !1, this._ignoreBackdropClick = !1, this._isTransitioning = !1, this._scrollbarWidth = 0; } const n = t.prototype; return n.toggle = function (t) { return this._isShown ? this.hide() : this.show(t); }, n.show = function (t) { const n = this; if (!this._isShown && !this._isTransitioning) { e(this._element).hasClass("fade") && (this._isTransitioning = !0); const i = e.Event("show.bs.modal", { relatedTarget: t }); e(this._element).trigger(i), this._isShown || i.isDefaultPrevented() || (this._isShown = !0, this._checkScrollbar(), this._setScrollbar(), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), e(this._element).on("click.dismiss.bs.modal", "[data-dismiss=\"modal\"]", function (t) { return n.hide(t); }), e(this._dialog).on("mousedown.dismiss.bs.modal", function () { e(n._element).one("mouseup.dismiss.bs.modal", function (t) { e(t.target).is(n._element) && (n._ignoreBackdropClick = !0); }); }), this._showBackdrop(function () { return n._showElement(t); })); } }, n.hide = function (t) { const n = this; if (t && t.preventDefault(), this._isShown && !this._isTransitioning) { const i = e.Event("hide.bs.modal"); if (e(this._element).trigger(i), this._isShown && !i.isDefaultPrevented()) { this._isShown = !1; const o = e(this._element).hasClass("fade"); if (o && (this._isTransitioning = !0), this._setEscapeEvent(), this._setResizeEvent(), e(document).off("focusin.bs.modal"), e(this._element).removeClass("show"), e(this._element).off("click.dismiss.bs.modal"), e(this._dialog).off("mousedown.dismiss.bs.modal"), o) { const s = a.getTransitionDurationFromElement(this._element); e(this._element).one(a.TRANSITION_END, function (t) { return n._hideModal(t); }).emulateTransitionEnd(s); } else this._hideModal(); } } }, n.dispose = function () { [window, this._element, this._dialog].forEach(function (t) { return e(t).off(".bs.modal"); }), e(document).off("focusin.bs.modal"), e.removeData(this._element, "bs.modal"), this._config = null, this._element = null, this._dialog = null, this._backdrop = null, this._isShown = null, this._isBodyOverflowing = null, this._ignoreBackdropClick = null, this._isTransitioning = null, this._scrollbarWidth = null; }, n.handleUpdate = function () { this._adjustDialog(); }, n._getConfig = function (t) { return t = s({}, j, t), a.typeCheckConfig("modal", t, x), t; }, n._triggerBackdropTransition = function () { const t = this; if (this._config.backdrop === "static") { const n = e.Event("hidePrevented.bs.modal"); if (e(this._element).trigger(n), n.defaultPrevented) return; const i = this._element.scrollHeight > document.documentElement.clientHeight; i || (this._element.style.overflowY = "hidden"), this._element.classList.add("modal-static"); const o = a.getTransitionDurationFromElement(this._dialog); e(this._element).off(a.TRANSITION_END), e(this._element).one(a.TRANSITION_END, function () { t._element.classList.remove("modal-static"), i || e(t._element).one(a.TRANSITION_END, function () { t._element.style.overflowY = ""; }).emulateTransitionEnd(t._element, o); }).emulateTransitionEnd(o), this._element.focus(); } else this.hide(); }, n._showElement = function (t) { const n = this; const i = e(this._element).hasClass("fade"); const o = this._dialog ? this._dialog.querySelector(".modal-body") : null; this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", !0), this._element.setAttribute("role", "dialog"), e(this._dialog).hasClass("modal-dialog-scrollable") && o ? o.scrollTop = 0 : this._element.scrollTop = 0, i && a.reflow(this._element), e(this._element).addClass("show"), this._config.focus && this._enforceFocus(); const s = e.Event("shown.bs.modal", { relatedTarget: t }); const r = function () { n._config.focus && n._element.focus(), n._isTransitioning = !1, e(n._element).trigger(s); }; if (i) { const l = a.getTransitionDurationFromElement(this._dialog); e(this._dialog).one(a.TRANSITION_END, r).emulateTransitionEnd(l); } else r(); }, n._enforceFocus = function () { const t = this; e(document).off("focusin.bs.modal").on("focusin.bs.modal", function (n) { document !== n.target && t._element !== n.target && e(t._element).has(n.target).length === 0 && t._element.focus(); }); }, n._setEscapeEvent = function () { const t = this; this._isShown ? e(this._element).on("keydown.dismiss.bs.modal", function (e) { t._config.keyboard && e.which === 27 ? (e.preventDefault(), t.hide()) : t._config.keyboard || e.which !== 27 || t._triggerBackdropTransition(); }) : this._isShown || e(this._element).off("keydown.dismiss.bs.modal"); }, n._setResizeEvent = function () { const t = this; this._isShown ? e(window).on("resize.bs.modal", function (e) { return t.handleUpdate(e); }) : e(window).off("resize.bs.modal"); }, n._hideModal = function () { const t = this; this._element.style.display = "none", this._element.setAttribute("aria-hidden", !0), this._element.removeAttribute("aria-modal"), this._element.removeAttribute("role"), this._isTransitioning = !1, this._showBackdrop(function () { e(document.body).removeClass("modal-open"), t._resetAdjustments(), t._resetScrollbar(), e(t._element).trigger("hidden.bs.modal"); }); }, n._removeBackdrop = function () { this._backdrop && (e(this._backdrop).remove(), this._backdrop = null); }, n._showBackdrop = function (t) { const n = this; const i = e(this._element).hasClass("fade") ? "fade" : ""; if (this._isShown && this._config.backdrop) { if (this._backdrop = document.createElement("div"), this._backdrop.className = "modal-backdrop", i && this._backdrop.classList.add(i), e(this._backdrop).appendTo(document.body), e(this._element).on("click.dismiss.bs.modal", function (t) { n._ignoreBackdropClick ? n._ignoreBackdropClick = !1 : t.target === t.currentTarget && n._triggerBackdropTransition(); }), i && a.reflow(this._backdrop), e(this._backdrop).addClass("show"), !t) return; if (!i) return void t(); const o = a.getTransitionDurationFromElement(this._backdrop); e(this._backdrop).one(a.TRANSITION_END, t).emulateTransitionEnd(o); } else if (!this._isShown && this._backdrop) { e(this._backdrop).removeClass("show"); const s = function () { n._removeBackdrop(), t && t(); }; if (e(this._element).hasClass("fade")) { const r = a.getTransitionDurationFromElement(this._backdrop); e(this._backdrop).one(a.TRANSITION_END, s).emulateTransitionEnd(r); } else s(); } else t && t(); }, n._adjustDialog = function () { const t = this._element.scrollHeight > document.documentElement.clientHeight; !this._isBodyOverflowing && t && (this._element.style.paddingLeft = this._scrollbarWidth + "px"), this._isBodyOverflowing && !t && (this._element.style.paddingRight = this._scrollbarWidth + "px"); }, n._resetAdjustments = function () { this._element.style.paddingLeft = "", this._element.style.paddingRight = ""; }, n._checkScrollbar = function () { const t = document.body.getBoundingClientRect(); this._isBodyOverflowing = Math.round(t.left + t.right) < window.innerWidth, this._scrollbarWidth = this._getScrollbarWidth(); }, n._setScrollbar = function () { const t = this; if (this._isBodyOverflowing) { const n = [].slice.call(document.querySelectorAll(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top")); const i = [].slice.call(document.querySelectorAll(".sticky-top")); e(n).each(function (n, i) { const o = i.style.paddingRight; const s = e(i).css("padding-right"); e(i).data("padding-right", o).css("padding-right", parseFloat(s) + t._scrollbarWidth + "px"); }), e(i).each(function (n, i) { const o = i.style.marginRight; const s = e(i).css("margin-right"); e(i).data("margin-right", o).css("margin-right", parseFloat(s) - t._scrollbarWidth + "px"); }); const o = document.body.style.paddingRight; const s = e(document.body).css("padding-right"); e(document.body).data("padding-right", o).css("padding-right", parseFloat(s) + this._scrollbarWidth + "px"); }e(document.body).addClass("modal-open"); }, n._resetScrollbar = function () { const t = [].slice.call(document.querySelectorAll(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top")); e(t).each(function (t, n) { const i = e(n).data("padding-right"); e(n).removeData("padding-right"), n.style.paddingRight = i || ""; }); const n = [].slice.call(document.querySelectorAll(".sticky-top")); e(n).each(function (t, n) { const i = e(n).data("margin-right"); typeof i !== "undefined" && e(n).css("margin-right", i).removeData("margin-right"); }); const i = e(document.body).data("padding-right"); e(document.body).removeData("padding-right"), document.body.style.paddingRight = i || ""; }, n._getScrollbarWidth = function () { const t = document.createElement("div"); t.className = "modal-scrollbar-measure", document.body.appendChild(t); const e = t.getBoundingClientRect().width - t.clientWidth; return document.body.removeChild(t), e; }, t._jQueryInterface = function (n, i) { return this.each(function () { let o = e(this).data("bs.modal"); const r = s({}, j, e(this).data(), typeof n === "object" && n ? n : {}); if (o || (o = new t(this, r), e(this).data("bs.modal", o)), typeof n === "string") { if (typeof o[n] === "undefined") throw new TypeError("No method named \"" + n + "\""); o[n](i); } else r.show && o.show(i); }); }, o(t, null, [{ key: "VERSION", get: function () { return "4.5.2"; } }, { key: "Default", get: function () { return j; } }]), t; }()); e(document).on("click.bs.modal.data-api", "[data-toggle=\"modal\"]", function (t) { let n; const i = this; const o = a.getSelectorFromElement(this); o && (n = document.querySelector(o)); const r = e(n).data("bs.modal") ? "toggle" : s({}, e(n).data(), e(this).data()); this.tagName !== "A" && this.tagName !== "AREA" || t.preventDefault(); var l = e(n).one("show.bs.modal", function (t) { t.isDefaultPrevented() || l.one("hidden.bs.modal", function () { e(i).is(":visible") && i.focus(); }); }); P._jQueryInterface.call(e(n), r, this); }), e.fn.modal = P._jQueryInterface, e.fn.modal.Constructor = P, e.fn.modal.noConflict = function () { return e.fn.modal = O, P._jQueryInterface; }; const R = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"]; const L = { "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i], a: ["target", "href", "title", "rel"], area: [], b: [], br: [], col: [], code: [], div: [], em: [], hr: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], i: [], img: ["src", "srcset", "alt", "title", "width", "height"], li: [], ol: [], p: [], pre: [], s: [], small: [], span: [], sub: [], sup: [], strong: [], u: [], ul: [] }; const q = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi; const F = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i; function Q (t, e, n) { if (t.length === 0) return t; if (n && typeof n === "function") return n(t); for (var i = (new window.DOMParser()).parseFromString(t, "text/html"), o = Object.keys(e), s = [].slice.call(i.body.querySelectorAll("*")), r = function (t, n) { const i = s[t]; const r = i.nodeName.toLowerCase(); if (o.indexOf(i.nodeName.toLowerCase()) === -1) return i.parentNode.removeChild(i), "continue"; const a = [].slice.call(i.attributes); const l = [].concat(e["*"] || [], e[r] || []); a.forEach(function (t) { (function (t, e) { const n = t.nodeName.toLowerCase(); if (e.indexOf(n) !== -1) return R.indexOf(n) === -1 || Boolean(t.nodeValue.match(q) || t.nodeValue.match(F)); for (let i = e.filter(function (t) { return t instanceof RegExp; }), o = 0, s = i.length; o < s; o++) if (n.match(i[o])) return !0; return !1; })(t, l) || i.removeAttribute(t.nodeName); }); }, a = 0, l = s.length; a < l; a++)r(a); return i.body.innerHTML; } const B = "tooltip"; const H = e.fn[B]; const U = new RegExp("(^|\\s)bs-tooltip\\S+", "g"); const M = ["sanitize", "whiteList", "sanitizeFn"]; const W = { animation: "boolean", template: "string", title: "(string|element|function)", trigger: "string", delay: "(number|object)", html: "boolean", selector: "(string|boolean)", placement: "(string|function)", offset: "(number|string|function)", container: "(string|element|boolean)", fallbackPlacement: "(string|array)", boundary: "(string|element)", sanitize: "boolean", sanitizeFn: "(null|function)", whiteList: "object", popperConfig: "(null|object)" }; const V = { AUTO: "auto", TOP: "top", RIGHT: "right", BOTTOM: "bottom", LEFT: "left" }; const z = { animation: !0, template: "<div class=\"tooltip\" role=\"tooltip\"><div class=\"arrow\"></div><div class=\"tooltip-inner\"></div></div>", trigger: "hover focus", title: "", delay: 0, html: !1, selector: !1, placement: "top", offset: 0, container: !1, fallbackPlacement: "flip", boundary: "scrollParent", sanitize: !0, sanitizeFn: null, whiteList: L, popperConfig: null }; const K = { HIDE: "hide.bs.tooltip", HIDDEN: "hidden.bs.tooltip", SHOW: "show.bs.tooltip", SHOWN: "shown.bs.tooltip", INSERTED: "inserted.bs.tooltip", CLICK: "click.bs.tooltip", FOCUSIN: "focusin.bs.tooltip", FOCUSOUT: "focusout.bs.tooltip", MOUSEENTER: "mouseenter.bs.tooltip", MOUSELEAVE: "mouseleave.bs.tooltip" }; const X = (function () { function t (t, e) { if (typeof n === "undefined") throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)"); this._isEnabled = !0, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, this._popper = null, this.element = t, this.config = this._getConfig(e), this.tip = null, this._setListeners(); } const i = t.prototype; return i.enable = function () { this._isEnabled = !0; }, i.disable = function () { this._isEnabled = !1; }, i.toggleEnabled = function () { this._isEnabled = !this._isEnabled; }, i.toggle = function (t) { if (this._isEnabled) if (t) { const n = this.constructor.DATA_KEY; let i = e(t.currentTarget).data(n); i || (i = new this.constructor(t.currentTarget, this._getDelegateConfig()), e(t.currentTarget).data(n, i)), i._activeTrigger.click = !i._activeTrigger.click, i._isWithActiveTrigger() ? i._enter(null, i) : i._leave(null, i); } else { if (e(this.getTipElement()).hasClass("show")) return void this._leave(null, this); this._enter(null, this); } }, i.dispose = function () { clearTimeout(this._timeout), e.removeData(this.element, this.constructor.DATA_KEY), e(this.element).off(this.constructor.EVENT_KEY), e(this.element).closest(".modal").off("hide.bs.modal", this._hideModalHandler), this.tip && e(this.tip).remove(), this._isEnabled = null, this._timeout = null, this._hoverState = null, this._activeTrigger = null, this._popper && this._popper.destroy(), this._popper = null, this.element = null, this.config = null, this.tip = null; }, i.show = function () { const t = this; if (e(this.element).css("display") === "none") throw new Error("Please use show on visible elements"); const i = e.Event(this.constructor.Event.SHOW); if (this.isWithContent() && this._isEnabled) { e(this.element).trigger(i); const o = a.findShadowRoot(this.element); const s = e.contains(o !== null ? o : this.element.ownerDocument.documentElement, this.element); if (i.isDefaultPrevented() || !s) return; const r = this.getTipElement(); const l = a.getUID(this.constructor.NAME); r.setAttribute("id", l), this.element.setAttribute("aria-describedby", l), this.setContent(), this.config.animation && e(r).addClass("fade"); const c = typeof this.config.placement === "function" ? this.config.placement.call(this, r, this.element) : this.config.placement; const h = this._getAttachment(c); this.addAttachmentClass(h); const u = this._getContainer(); e(r).data(this.constructor.DATA_KEY, this), e.contains(this.element.ownerDocument.documentElement, this.tip) || e(r).appendTo(u), e(this.element).trigger(this.constructor.Event.INSERTED), this._popper = new n(this.element, r, this._getPopperConfig(h)), e(r).addClass("show"), "ontouchstart" in document.documentElement && e(document.body).children().on("mouseover", null, e.noop); const d = function () { t.config.animation && t._fixTransition(); const n = t._hoverState; t._hoverState = null, e(t.element).trigger(t.constructor.Event.SHOWN), n === "out" && t._leave(null, t); }; if (e(this.tip).hasClass("fade")) { const f = a.getTransitionDurationFromElement(this.tip); e(this.tip).one(a.TRANSITION_END, d).emulateTransitionEnd(f); } else d(); } }, i.hide = function (t) { const n = this; const i = this.getTipElement(); const o = e.Event(this.constructor.Event.HIDE); const s = function () { n._hoverState !== "show" && i.parentNode && i.parentNode.removeChild(i), n._cleanTipClass(), n.element.removeAttribute("aria-describedby"), e(n.element).trigger(n.constructor.Event.HIDDEN), n._popper !== null && n._popper.destroy(), t && t(); }; if (e(this.element).trigger(o), !o.isDefaultPrevented()) { if (e(i).removeClass("show"), "ontouchstart" in document.documentElement && e(document.body).children().off("mouseover", null, e.noop), this._activeTrigger.click = !1, this._activeTrigger.focus = !1, this._activeTrigger.hover = !1, e(this.tip).hasClass("fade")) { const r = a.getTransitionDurationFromElement(i); e(i).one(a.TRANSITION_END, s).emulateTransitionEnd(r); } else s(); this._hoverState = ""; } }, i.update = function () { this._popper !== null && this._popper.scheduleUpdate(); }, i.isWithContent = function () { return Boolean(this.getTitle()); }, i.addAttachmentClass = function (t) { e(this.getTipElement()).addClass("bs-tooltip-" + t); }, i.getTipElement = function () { return this.tip = this.tip || e(this.config.template)[0], this.tip; }, i.setContent = function () { const t = this.getTipElement(); this.setElementContent(e(t.querySelectorAll(".tooltip-inner")), this.getTitle()), e(t).removeClass("fade show"); }, i.setElementContent = function (t, n) { typeof n !== "object" || !n.nodeType && !n.jquery ? this.config.html ? (this.config.sanitize && (n = Q(n, this.config.whiteList, this.config.sanitizeFn)), t.html(n)) : t.text(n) : this.config.html ? e(n).parent().is(t) || t.empty().append(n) : t.text(e(n).text()); }, i.getTitle = function () { let t = this.element.getAttribute("data-original-title"); return t || (t = typeof this.config.title === "function" ? this.config.title.call(this.element) : this.config.title), t; }, i._getPopperConfig = function (t) { const e = this; return s({}, { placement: t, modifiers: { offset: this._getOffset(), flip: { behavior: this.config.fallbackPlacement }, arrow: { element: ".arrow" }, preventOverflow: { boundariesElement: this.config.boundary } }, onCreate: function (t) { t.originalPlacement !== t.placement && e._handlePopperPlacementChange(t); }, onUpdate: function (t) { return e._handlePopperPlacementChange(t); } }, this.config.popperConfig); }, i._getOffset = function () { const t = this; const e = {}; return typeof this.config.offset === "function" ? e.fn = function (e) { return e.offsets = s({}, e.offsets, t.config.offset(e.offsets, t.element) || {}), e; } : e.offset = this.config.offset, e; }, i._getContainer = function () { return !1 === this.config.container ? document.body : a.isElement(this.config.container) ? e(this.config.container) : e(document).find(this.config.container); }, i._getAttachment = function (t) { return V[t.toUpperCase()]; }, i._setListeners = function () { const t = this; this.config.trigger.split(" ").forEach(function (n) { if (n === "click")e(t.element).on(t.constructor.Event.CLICK, t.config.selector, function (e) { return t.toggle(e); }); else if (n !== "manual") { const i = n === "hover" ? t.constructor.Event.MOUSEENTER : t.constructor.Event.FOCUSIN; const o = n === "hover" ? t.constructor.Event.MOUSELEAVE : t.constructor.Event.FOCUSOUT; e(t.element).on(i, t.config.selector, function (e) { return t._enter(e); }).on(o, t.config.selector, function (e) { return t._leave(e); }); } }), this._hideModalHandler = function () { t.element && t.hide(); }, e(this.element).closest(".modal").on("hide.bs.modal", this._hideModalHandler), this.config.selector ? this.config = s({}, this.config, { trigger: "manual", selector: "" }) : this._fixTitle(); }, i._fixTitle = function () { const t = typeof this.element.getAttribute("data-original-title"); (this.element.getAttribute("title") || t !== "string") && (this.element.setAttribute("data-original-title", this.element.getAttribute("title") || ""), this.element.setAttribute("title", "")); }, i._enter = function (t, n) { const i = this.constructor.DATA_KEY; (n = n || e(t.currentTarget).data(i)) || (n = new this.constructor(t.currentTarget, this._getDelegateConfig()), e(t.currentTarget).data(i, n)), t && (n._activeTrigger[t.type === "focusin" ? "focus" : "hover"] = !0), e(n.getTipElement()).hasClass("show") || n._hoverState === "show" ? n._hoverState = "show" : (clearTimeout(n._timeout), n._hoverState = "show", n.config.delay && n.config.delay.show ? n._timeout = setTimeout(function () { n._hoverState === "show" && n.show(); }, n.config.delay.show) : n.show()); }, i._leave = function (t, n) { const i = this.constructor.DATA_KEY; (n = n || e(t.currentTarget).data(i)) || (n = new this.constructor(t.currentTarget, this._getDelegateConfig()), e(t.currentTarget).data(i, n)), t && (n._activeTrigger[t.type === "focusout" ? "focus" : "hover"] = !1), n._isWithActiveTrigger() || (clearTimeout(n._timeout), n._hoverState = "out", n.config.delay && n.config.delay.hide ? n._timeout = setTimeout(function () { n._hoverState === "out" && n.hide(); }, n.config.delay.hide) : n.hide()); }, i._isWithActiveTrigger = function () { for (const t in this._activeTrigger) if (this._activeTrigger[t]) return !0; return !1; }, i._getConfig = function (t) { const n = e(this.element).data(); return Object.keys(n).forEach(function (t) { M.indexOf(t) !== -1 && delete n[t]; }), typeof (t = s({}, this.constructor.Default, n, typeof t === "object" && t ? t : {})).delay === "number" && (t.delay = { show: t.delay, hide: t.delay }), typeof t.title === "number" && (t.title = t.title.toString()), typeof t.content === "number" && (t.content = t.content.toString()), a.typeCheckConfig(B, t, this.constructor.DefaultType), t.sanitize && (t.template = Q(t.template, t.whiteList, t.sanitizeFn)), t; }, i._getDelegateConfig = function () { const t = {}; if (this.config) for (const e in this.config) this.constructor.Default[e] !== this.config[e] && (t[e] = this.config[e]); return t; }, i._cleanTipClass = function () { const t = e(this.getTipElement()); const n = t.attr("class").match(U); n !== null && n.length && t.removeClass(n.join("")); }, i._handlePopperPlacementChange = function (t) { this.tip = t.instance.popper, this._cleanTipClass(), this.addAttachmentClass(this._getAttachment(t.placement)); }, i._fixTransition = function () { const t = this.getTipElement(); const n = this.config.animation; t.getAttribute("x-placement") === null && (e(t).removeClass("fade"), this.config.animation = !1, this.hide(), this.show(), this.config.animation = n); }, t._jQueryInterface = function (n) { return this.each(function () { let i = e(this).data("bs.tooltip"); const o = typeof n === "object" && n; if ((i || !/dispose|hide/.test(n)) && (i || (i = new t(this, o), e(this).data("bs.tooltip", i)), typeof n === "string")) { if (typeof i[n] === "undefined") throw new TypeError("No method named \"" + n + "\""); i[n](); } }); }, o(t, null, [{ key: "VERSION", get: function () { return "4.5.2"; } }, { key: "Default", get: function () { return z; } }, { key: "NAME", get: function () { return B; } }, { key: "DATA_KEY", get: function () { return "bs.tooltip"; } }, { key: "Event", get: function () { return K; } }, { key: "EVENT_KEY", get: function () { return ".bs.tooltip"; } }, { key: "DefaultType", get: function () { return W; } }]), t; }()); e.fn[B] = X._jQueryInterface, e.fn[B].Constructor = X, e.fn[B].noConflict = function () { return e.fn[B] = H, X._jQueryInterface; }; const Y = "popover"; const $ = e.fn[Y]; const J = new RegExp("(^|\\s)bs-popover\\S+", "g"); const G = s({}, X.Default, { placement: "right", trigger: "click", content: "", template: "<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>" }); const Z = s({}, X.DefaultType, { content: "(string|element|function)" }); const tt = { HIDE: "hide.bs.popover", HIDDEN: "hidden.bs.popover", SHOW: "show.bs.popover", SHOWN: "shown.bs.popover", INSERTED: "inserted.bs.popover", CLICK: "click.bs.popover", FOCUSIN: "focusin.bs.popover", FOCUSOUT: "focusout.bs.popover", MOUSEENTER: "mouseenter.bs.popover", MOUSELEAVE: "mouseleave.bs.popover" }; const et = (function (t) { let n, i; function s () { return t.apply(this, arguments) || this; }i = t, (n = s).prototype = Object.create(i.prototype), n.prototype.constructor = n, n.__proto__ = i; const r = s.prototype; return r.isWithContent = function () { return this.getTitle() || this._getContent(); }, r.addAttachmentClass = function (t) { e(this.getTipElement()).addClass("bs-popover-" + t); }, r.getTipElement = function () { return this.tip = this.tip || e(this.config.template)[0], this.tip; }, r.setContent = function () { const t = e(this.getTipElement()); this.setElementContent(t.find(".popover-header"), this.getTitle()); let n = this._getContent(); typeof n === "function" && (n = n.call(this.element)), this.setElementContent(t.find(".popover-body"), n), t.removeClass("fade show"); }, r._getContent = function () { return this.element.getAttribute("data-content") || this.config.content; }, r._cleanTipClass = function () { const t = e(this.getTipElement()); const n = t.attr("class").match(J); n !== null && n.length > 0 && t.removeClass(n.join("")); }, s._jQueryInterface = function (t) { return this.each(function () { let n = e(this).data("bs.popover"); const i = typeof t === "object" ? t : null; if ((n || !/dispose|hide/.test(t)) && (n || (n = new s(this, i), e(this).data("bs.popover", n)), typeof t === "string")) { if (typeof n[t] === "undefined") throw new TypeError("No method named \"" + t + "\""); n[t](); } }); }, o(s, null, [{ key: "VERSION", get: function () { return "4.5.2"; } }, { key: "Default", get: function () { return G; } }, { key: "NAME", get: function () { return Y; } }, { key: "DATA_KEY", get: function () { return "bs.popover"; } }, { key: "Event", get: function () { return tt; } }, { key: "EVENT_KEY", get: function () { return ".bs.popover"; } }, { key: "DefaultType", get: function () { return Z; } }]), s; }(X)); e.fn[Y] = et._jQueryInterface, e.fn[Y].Constructor = et, e.fn[Y].noConflict = function () { return e.fn[Y] = $, et._jQueryInterface; }; const nt = "scrollspy"; const it = e.fn[nt]; const ot = { offset: 10, method: "auto", target: "" }; const st = { offset: "number", method: "string", target: "(string|element)" }; const rt = (function () { function t (t, n) { const i = this; this._element = t, this._scrollElement = t.tagName === "BODY" ? window : t, this._config = this._getConfig(n), this._selector = this._config.target + " .nav-link," + this._config.target + " .list-group-item," + this._config.target + " .dropdown-item", this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, e(this._scrollElement).on("scroll.bs.scrollspy", function (t) { return i._process(t); }), this.refresh(), this._process(); } const n = t.prototype; return n.refresh = function () { const t = this; const n = this._scrollElement === this._scrollElement.window ? "offset" : "position"; const i = this._config.method === "auto" ? n : this._config.method; const o = i === "position" ? this._getScrollTop() : 0; this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), [].slice.call(document.querySelectorAll(this._selector)).map(function (t) { let n; const s = a.getSelectorFromElement(t); if (s && (n = document.querySelector(s)), n) { const r = n.getBoundingClientRect(); if (r.width || r.height) return [e(n)[i]().top + o, s]; } return null; }).filter(function (t) { return t; }).sort(function (t, e) { return t[0] - e[0]; }).forEach(function (e) { t._offsets.push(e[0]), t._targets.push(e[1]); }); }, n.dispose = function () { e.removeData(this._element, "bs.scrollspy"), e(this._scrollElement).off(".bs.scrollspy"), this._element = null, this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, this._targets = null, this._activeTarget = null, this._scrollHeight = null; }, n._getConfig = function (t) { if (typeof (t = s({}, ot, typeof t === "object" && t ? t : {})).target !== "string" && a.isElement(t.target)) { let n = e(t.target).attr("id"); n || (n = a.getUID(nt), e(t.target).attr("id", n)), t.target = "#" + n; } return a.typeCheckConfig(nt, t, st), t; }, n._getScrollTop = function () { return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop; }, n._getScrollHeight = function () { return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight); }, n._getOffsetHeight = function () { return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height; }, n._process = function () { const t = this._getScrollTop() + this._config.offset; const e = this._getScrollHeight(); const n = this._config.offset + e - this._getOffsetHeight(); if (this._scrollHeight !== e && this.refresh(), t >= n) { const i = this._targets[this._targets.length - 1]; this._activeTarget !== i && this._activate(i); } else { if (this._activeTarget && t < this._offsets[0] && this._offsets[0] > 0) return this._activeTarget = null, void this._clear(); for (let o = this._offsets.length; o--;) { this._activeTarget !== this._targets[o] && t >= this._offsets[o] && (typeof this._offsets[o + 1] === "undefined" || t < this._offsets[o + 1]) && this._activate(this._targets[o]); } } }, n._activate = function (t) { this._activeTarget = t, this._clear(); const n = this._selector.split(",").map(function (e) { return e + "[data-target=\"" + t + "\"]," + e + "[href=\"" + t + "\"]"; }); const i = e([].slice.call(document.querySelectorAll(n.join(",")))); i.hasClass("dropdown-item") ? (i.closest(".dropdown").find(".dropdown-toggle").addClass("active"), i.addClass("active")) : (i.addClass("active"), i.parents(".nav, .list-group").prev(".nav-link, .list-group-item").addClass("active"), i.parents(".nav, .list-group").prev(".nav-item").children(".nav-link").addClass("active")), e(this._scrollElement).trigger("activate.bs.scrollspy", { relatedTarget: t }); }, n._clear = function () { [].slice.call(document.querySelectorAll(this._selector)).filter(function (t) { return t.classList.contains("active"); }).forEach(function (t) { return t.classList.remove("active"); }); }, t._jQueryInterface = function (n) { return this.each(function () { let i = e(this).data("bs.scrollspy"); if (i || (i = new t(this, typeof n === "object" && n), e(this).data("bs.scrollspy", i)), typeof n === "string") { if (typeof i[n] === "undefined") throw new TypeError("No method named \"" + n + "\""); i[n](); } }); }, o(t, null, [{ key: "VERSION", get: function () { return "4.5.2"; } }, { key: "Default", get: function () { return ot; } }]), t; }()); e(window).on("load.bs.scrollspy.data-api", function () { for (let t = [].slice.call(document.querySelectorAll("[data-spy=\"scroll\"]")), n = t.length; n--;) { const i = e(t[n]); rt._jQueryInterface.call(i, i.data()); } }), e.fn[nt] = rt._jQueryInterface, e.fn[nt].Constructor = rt, e.fn[nt].noConflict = function () { return e.fn[nt] = it, rt._jQueryInterface; }; const at = e.fn.tab; const lt = (function () { function t (t) { this._element = t; } const n = t.prototype; return n.show = function () { const t = this; if (!(this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && e(this._element).hasClass("active") || e(this._element).hasClass("disabled"))) { let n; let i; const o = e(this._element).closest(".nav, .list-group")[0]; const s = a.getSelectorFromElement(this._element); if (o) { const r = o.nodeName === "UL" || o.nodeName === "OL" ? "> li > .active" : ".active"; i = (i = e.makeArray(e(o).find(r)))[i.length - 1]; } const l = e.Event("hide.bs.tab", { relatedTarget: this._element }); const c = e.Event("show.bs.tab", { relatedTarget: i }); if (i && e(i).trigger(l), e(this._element).trigger(c), !c.isDefaultPrevented() && !l.isDefaultPrevented()) { s && (n = document.querySelector(s)), this._activate(this._element, o); const h = function () { const n = e.Event("hidden.bs.tab", { relatedTarget: t._element }); const o = e.Event("shown.bs.tab", { relatedTarget: i }); e(i).trigger(n), e(t._element).trigger(o); }; n ? this._activate(n, n.parentNode, h) : h(); } } }, n.dispose = function () { e.removeData(this._element, "bs.tab"), this._element = null; }, n._activate = function (t, n, i) { const o = this; const s = (!n || n.nodeName !== "UL" && n.nodeName !== "OL" ? e(n).children(".active") : e(n).find("> li > .active"))[0]; const r = i && s && e(s).hasClass("fade"); const l = function () { return o._transitionComplete(t, s, i); }; if (s && r) { const c = a.getTransitionDurationFromElement(s); e(s).removeClass("show").one(a.TRANSITION_END, l).emulateTransitionEnd(c); } else l(); }, n._transitionComplete = function (t, n, i) { if (n) { e(n).removeClass("active"); const o = e(n.parentNode).find("> .dropdown-menu .active")[0]; o && e(o).removeClass("active"), n.getAttribute("role") === "tab" && n.setAttribute("aria-selected", !1); } if (e(t).addClass("active"), t.getAttribute("role") === "tab" && t.setAttribute("aria-selected", !0), a.reflow(t), t.classList.contains("fade") && t.classList.add("show"), t.parentNode && e(t.parentNode).hasClass("dropdown-menu")) { const s = e(t).closest(".dropdown")[0]; if (s) { const r = [].slice.call(s.querySelectorAll(".dropdown-toggle")); e(r).addClass("active"); }t.setAttribute("aria-expanded", !0); }i && i(); }, t._jQueryInterface = function (n) { return this.each(function () { const i = e(this); let o = i.data("bs.tab"); if (o || (o = new t(this), i.data("bs.tab", o)), typeof n === "string") { if (typeof o[n] === "undefined") throw new TypeError("No method named \"" + n + "\""); o[n](); } }); }, o(t, null, [{ key: "VERSION", get: function () { return "4.5.2"; } }]), t; }()); e(document).on("click.bs.tab.data-api", "[data-toggle=\"tab\"], [data-toggle=\"pill\"], [data-toggle=\"list\"]", function (t) { t.preventDefault(), lt._jQueryInterface.call(e(this), "show"); }), e.fn.tab = lt._jQueryInterface, e.fn.tab.Constructor = lt, e.fn.tab.noConflict = function () { return e.fn.tab = at, lt._jQueryInterface; }; const ct = e.fn.toast; const ht = { animation: "boolean", autohide: "boolean", delay: "number" }; const ut = { animation: !0, autohide: !0, delay: 500 }; const dt = (function () { function t (t, e) { this._element = t, this._config = this._getConfig(e), this._timeout = null, this._setListeners(); } const n = t.prototype; return n.show = function () { const t = this; const n = e.Event("show.bs.toast"); if (e(this._element).trigger(n), !n.isDefaultPrevented()) { this._clearTimeout(), this._config.animation && this._element.classList.add("fade"); const i = function () { t._element.classList.remove("showing"), t._element.classList.add("show"), e(t._element).trigger("shown.bs.toast"), t._config.autohide && (t._timeout = setTimeout(function () { t.hide(); }, t._config.delay)); }; if (this._element.classList.remove("hide"), a.reflow(this._element), this._element.classList.add("showing"), this._config.animation) { const o = a.getTransitionDurationFromElement(this._element); e(this._element).one(a.TRANSITION_END, i).emulateTransitionEnd(o); } else i(); } }, n.hide = function () { if (this._element.classList.contains("show")) { const t = e.Event("hide.bs.toast"); e(this._element).trigger(t), t.isDefaultPrevented() || this._close(); } }, n.dispose = function () { this._clearTimeout(), this._element.classList.contains("show") && this._element.classList.remove("show"), e(this._element).off("click.dismiss.bs.toast"), e.removeData(this._element, "bs.toast"), this._element = null, this._config = null; }, n._getConfig = function (t) { return t = s({}, ut, e(this._element).data(), typeof t === "object" && t ? t : {}), a.typeCheckConfig("toast", t, this.constructor.DefaultType), t; }, n._setListeners = function () { const t = this; e(this._element).on("click.dismiss.bs.toast", "[data-dismiss=\"toast\"]", function () { return t.hide(); }); }, n._close = function () { const t = this; const n = function () { t._element.classList.add("hide"), e(t._element).trigger("hidden.bs.toast"); }; if (this._element.classList.remove("show"), this._config.animation) { const i = a.getTransitionDurationFromElement(this._element); e(this._element).one(a.TRANSITION_END, n).emulateTransitionEnd(i); } else n(); }, n._clearTimeout = function () { clearTimeout(this._timeout), this._timeout = null; }, t._jQueryInterface = function (n) { return this.each(function () { const i = e(this); let o = i.data("bs.toast"); if (o || (o = new t(this, typeof n === "object" && n), i.data("bs.toast", o)), typeof n === "string") { if (typeof o[n] === "undefined") throw new TypeError("No method named \"" + n + "\""); o[n](this); } }); }, o(t, null, [{ key: "VERSION", get: function () { return "4.5.2"; } }, { key: "DefaultType", get: function () { return ht; } }, { key: "Default", get: function () { return ut; } }]), t; }()); e.fn.toast = dt._jQueryInterface, e.fn.toast.Constructor = dt, e.fn.toast.noConflict = function () { return e.fn.toast = ct, dt._jQueryInterface; }, t.Alert = h, t.Button = d, t.Carousel = b, t.Collapse = C, t.Dropdown = I, t.Modal = P, t.Popover = et, t.Scrollspy = rt, t.Tab = lt, t.Toast = dt, t.Tooltip = X, t.Util = a, Object.defineProperty(t, "__esModule", { value: !0 }); }));
// # sourceMappingURL=bootstrap.min.js.map
